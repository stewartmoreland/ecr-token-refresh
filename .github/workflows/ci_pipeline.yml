name: CI Pipeline
on:
  push:
    branches:
      - main
      - feature/**
      - release/**
      - hotfix/**
    tags:
      - v*

permissions:
  contents: read
  id-token: write
  issues: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -v ./...
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: bin/**

  container:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-west-2
        role-to-assume: arn:aws:iam::826749942458:role/temple-logiq-github-actions
        role-session-name: GitHubActions
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public
    - name: 'Get Current tag'
      id: current-tag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      with:
        fallback: 0.0.1
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
            public.ecr.aws/v5f8y9f4/ecr-token-refresh
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value={{ steps.previoustag.outputs.tag }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
